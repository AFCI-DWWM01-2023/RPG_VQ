# ------------------------------------------------------------------- #
                        - Requêtes SQL -
# ------------------------------------------------------------------- #






# ----------------------------- #
            - PDF 1 -
# ----------------------------- #






1- #   - SELECT -   #

** Afficher tous les personnages **
select * from personnage;

** Afficher la liste des armes **
select * from arme;

** Afficher seulement le nom et le « level » minimum de toutes les armes **
select nom,levelMin from arme;

** Afficher le nom, le surnom et le « level » de tous les personnages **
select nom,surnom,level from personnage;







#   - RENAME -   #

** Afficher le nom et le niveau de tous les personnages en modifiant les titres des colonnes en « Pseudo » et « Niveau » **
select nom as Pseudo , level as Niveau from personnage;

** Afficher le type des armes en renommant le type en « Types d’armes du jeu » **
select libelle as `Types armes du jeu` from typearme;







2- #   - CALCUL -   #

** Récupérer le nombre d’armes existantes **
select count(*) from arme; //  == 10

** Afficher le nombre de personnages du jeu (attention au nom de la colonne) **
select count(*) from personnage; //  == 7

** Récupérer la moyenne des niveaux des personnages du jeu **
select avg(niveau) from personnage; //  == 0

// - tous les niveau était à zéro alors j'ai du tout ré-update pour chaques personnages xD ...
UPDATE personnage
    SET niveau = 10
    WHERE idPersonnage = 7;
//

select avg(niveau) from personnage; //  == 8.5714

** Récupérer la somme des points de force, d’agilité e d’intelligence de toutes les classes **
select sum(baseForce) as `Points de force`, sum(baseAgi) as `Points d'agilité`, sum(baseIntel) as `Points d'intelligence` from classe; //  == 13 11 9

** Récupérer le « level » Minimum et Maximum des armes du jeu **
select MIN(levelMin) as `Min(levelMin)`, MAX(levelMin) as `MAX(levelMin)` from arme; ==  1 / 10

** Additionner le nombre de points de caractéristique de toutes les classes **
select nom, sum(baseForce + baseAgi + baseIntel) as `Points de caractéristiques` from classe group by idClasse;







3- #   - CONCAT -   #

** Afficher le nom et le surnom des personnages dans une seule colonne (Concaténation) **
select CONCAT( nom,surnom) as personnage from personnage;

** Afficher le nom des classes avec les points de caractéristique dans une seule colonne **
select CONCAT( nom,' ','-',' ','F: ',baseForce,' ','-',' ','A: ',baseAgi,' ','-',' ','I: ',baseIntel) as Classe from classe;

** Afficher les 6 premières lettres des noms des personnages **
select substr(nom,1, 6) from personnage;

** Afficher 5 premières lettres du nom des classes concaténées au 20 premières lettres de la description **
select concat(substr(nom,1, 6),` - `,substr(description,1,20)) from classe;







4- #   - WHERE -   #

** Récupérer toutes les armes dont le « level » minimum est de 5 **
select * from arme where levelMin>4;

** Récupérer toutes les armes ayant un nombre de dégâts inférieur à 25 **
select * from arme where degat<25;

** Récupérer tous les personnages ayant le « level » 10 et n’affiche que leur nom et leur surnom **
select nom , surnom from personnage where level=10;

** Récupérer toutes les armes à distance **
select * from typearme where estDistance=1;







5- #   - AND / OR / BETWEEN -   #

** Récupérer toutes les armes ayant un « level » minimum compris entre 4 et 8 (inclus) **
select * from arme where levelMin between 4 and 8;

 ** Récupérer tous les personnages ayant un identifiant inférieur à 3 et un « level » égal à 10 **
select * from personnage where idPersonnage<4 and level = 10;

** Récupérer toutes les armes ayant un « level » minimum inférieur à 4 ou supérieur à 8 (inclus) **
select * from arme where levelMin<4 or levelMin>7;

** Récupérer les armes 1, 2 et toutes les armes ayant un nombre de dégâts supérieur à 30 **
select * from arme where idArme = 1 or idArme =2 or  degat > 29;

** Récupérer l’arme 1 et l’arme 2 et les armes ayant un nombre de dégâts compris entre 25 et 40 **
select * from arme where idArme = 1 or idArme =2 or  degat > 24 and degat<41;

** Récupérer les personnages ayant un « level » différent de 8 et un « level » supérieur à 7 ou ayant un « level » inférieur à 6. **
select * from personnage where level<6 or level>7  and level!=8;

** Récupérer le nombre de personnage qui n’ont pas le « level » 10 **
select count(*) from personnage where level != 10;

** Récupérer la moyenne des dégâts des armes ayant un « level » compris entre 3 et 7 **
select avg(degat) from arme where levelMin>2 and levelMin<8;







6- #   - LIKE / IN LIMIT / OFFSET / IS NULL -   #

** Récupérer les personnages qui ont un nom commençant par la lettre « l » **
select * from personnage where nom like 'l%';

** Récupérer les personnages qui ont un nom commençant par la lettre « l » et se terminent par « er » **
select * from personnage where nom like 'l%' and nom like '%er';

** Récupérer les armes contenant le mot « bois » **
select * from arme where nom like '%bois%';

** Récupérer les armes commençant par A et ayant en troisième lettre B **
select * from arme where nom like 'A_b%';

** Récupérer les armes ayant comme identifiant 1,2,4,5,7 **
select * from arme where idArme!=3 and idArme!=6 limit 5;

** Récupérer les personnages ayant l’identifiant 2,3,4 et 6 et qui ont un « level » 10 **
select * from personnage where idPersonnage>1 and idPersonnage<7 and  level=10;

** Récupérer les personnages ayant un surnom **
select * from personnage where surnom is not null;

** Récupérer le personnage n’ayant pas de surnom **
select * from personnage where surnom is null;

** Récupérer les 3 premières lignes de personnages **
select * from personnage limit 3;

** Récupérer les lignes 4 et 5 de la table « personnage » **
select * from personnage limit 3,2;







# ----------------------------- #
            - PDF 2 -
# ----------------------------- #







1- #   -  Les jointures internes -   #

** Récupérer tous les personnages et leur classe **
SELECT * FROM personnage JOIN classe ON personnage.idClasse = classe.idClasse;

** Récupérer toutes les armes et leur type, vous devez afficher seulement le nom de l’arme, le level minimum, les dégâts de l’arme, le libelle, et le champ est à distance **
select nom, levelMin, libelle, estDistance from arme natural join typearme;







2- #   -  Les jointures et surnoms de tables -   #

** Récupérer le nom des personnages et le nom de leur classe **
select personnage.nom, classe.nom from personnage inner join classe on personnage.idClasse = classe.idClasse;

** Récupérer l’arme qui est utilisée par chaque personnage **
select personnage.nom, arme.nom, arme.levelMin, arme.degat from personnage join arme where personnage.idArmeUtilise = arme.idArme;

** Récupérer l’arme qui est utilisée par chaque personnage et le type d’arme **
select personnage.nom, arme.nom, arme.levelMin, arme.degat, typearme.libelle, typearme.estDistance from personnage join arme, typearme where personnage.idArmeUtilise = arme.idArme and arme.idTypeArme = typearme.idTypearme;







3- #   -  Jointures er filtres -   #

** Récupérer toutes les armes de tous les personnages **
select personnage.nom,personnage.level, arme.nom, arme.levelMin from personnage join arme, typearme where personnage.idArmeUtilise = arme.idArme and arme.idTypeArme = typearme.idTypearme;

** Récupérer toutes les armes qui ne sont pas à distance **
select arme.nom, arme.levelMin, arme.degat, typearme.libelle from arme join typearme where arme.idTypeArme = typearme.idTypeArme and typearme.estDistance !=1;

** Récupérer l’arme utilisée par chaque guerrier **
select personnage.nom, arme.nom, typearme.libelle from personnage 
inner join classe on personnage.idClasse = classe.idClasse
inner join arme on personnage.idArmeUtilise = arme.idArme
inner join typearme on arme.idTypeArme = typearme.idTypearme
where classe.nom = 'Guerrier';







4- #   -  Jointures, calculs et tris -   #

** Récupérer toutes les armes dont disposent les joueurs ayant le level 10 **
select personnage.idPersonnage,personnage.nom, arme.nom, typearme.libelle from personnage 
inner join arme on personnage.idArmeUtilise = arme.idArme
inner join typearme on arme.idTypeArme = typearme.idTypearme
where level = 10;

** Récupérer toutes les armes dont disposent les joueurs ayant le level 10, triées par id Personnage **
select personnage.idPersonnage,personnage.nom, arme.nom, typearme.libelle from personnage 
inner join arme on personnage.idArmeUtilise = arme.idArme
inner join typearme on arme.idTypeArme = typearme.idTypearme
where level = 10
order by personnage.idPersonnage;

** Récupérer la moyenne des dégats des armes à distance **
select avg(arme.degat) as `Moyenne des dégats des armes à distance` from arme
inner join typearme on arme.idTypeArme = typearme.idTypeArme
where typearme.estDistance = 1;

** Récupérer tous les personnages disposant d’une arme d’un type commençant par « a » **
select personnage.nom from personnage inner join arme on personnage.idArmeUtilise = arme.idArme inner join typearme on arme.idTypeArme = typearme.idTypeArme where typearme.libelle like 'a%';







5- #   -  Les jointures externes -   #

** Récupérer tous les types d’armes même ceux qui n’ont pas d’arme associée **
select typearme.libelle as Type , arme.nom as Arme from typearme inner join arme on typearme.idTypeArme = arme.idTypeArme;

** Récupérer tous les types d’armes, et afficher les armes pour chaque type (même les types qui n’ont pas d’arme). Avec un RIGHT JOIN **
select typearme.libelle as Type , arme.nom as Arme from arme  RIGHT join typearme on arme.idTypeArme = typearme.idTypeArme;

** Récupérer toutes les armes et afficher le personnage qui les utilise, ordonnées par le level minimum(l’objectif est de récupérer toutes armes et d’associer les personnages) **
select * from personnage right join arme on arme.idArme = personnage.idArmeUtilise order by arme.levelMin;

** Récupérer toutes les armes et voir les personnages qui les ont en leur possession (table dispose), avec RIGHT JOIN (ordonné) **
select arme.idArme, arme.nom as Arme , personnage.nom from dispose right join arme on arme.idArme = dispose.idArme right join personnage on personnage.idPersonnage = dispose.idPersonnage order by arme.idArme;







# ----------------------------- #
            - PDF 3 -
# ----------------------------- #







1- #   -  Regroupement et GROUP BY -   #

** Afficher le nombre d’arme par type d’arme **
select typearme.libelle as `Type d'arme`, count(idArme) as `Nb d'armes` from arme right join typearme on typearme.idTypeArme = arme.idTypeArme group by typearme.idTypeArme;
 
** Afficher le nombre de personnage par classe **
select classe.nom as `Classe`, classe.description, count(idPersonnage) as `Nb de joueurs` from classe right join personnage on classe.idClasse = personnage.idClasse group by classe.idClasse;
 
** Afficher le nombre d’armes dont dispose chaque personnage **
select personnage.nom, count(*) from personnage right join dispose on personnage.idPersonnage = dispose.idPersonnage group by personnage.idPersonnage;
 
** Afficher le nombre d’armes dont dispose chaque personnage mais seulement les guerriers **
select personnage.nom, count(*) from personnage right join dispose on personnage.idPersonnage = dispose.idPersonnage join classe on personnage.idClasse = classe.idClasse where classe.nom = 'Guerrier' group by personnage.idPersonnage;
 
** Afficher le nombre de personnage par arme **
select arme.nom, count(*) as `Nb de joueurs` from arme right join dispose on arme.idArme = dispose.idArme group by arme.idArme;
 
** Afficher le niveau moyen de chaque classe **
select classe.nom as `Classe`, avg(personnage.level) as `Niveau moyen` from classe right join personnage on classe.idClasse = personnage.idClasse group by classe.idClasse;
 






2- #   -  Regroupement et HAVING -   #

** Afficher le niveau moyen de chaque classe et ne récupérer que les classes ayant un niveau minimum de 9 **
select classe.nom as `Classe`, avg(personnage.level) as `Niveau moyen` from classe right join personnage on classe.idClasse = personnage.idClasse group by classe.idClasse having avg(personnage.level) > 8;
 
** Afficher le nombre de personnage par arme et ne garder que les armes ayant entre 1 et 2 utilisateurs (table dispose) **
select arme.nom, count(*) as `Nb de joueurs` from arme right join dispose on arme.idArme = dispose.idArme group by arme.idArme having count(*)<3;
 
** Afficher le nombre d’arme par type d’arme mais ne prendre que les armes de corps à corps présentes au maximum 1 fois **
select typearme.libelle as `Type d'arme`, count(idArme) as `Nb d'armes` from arme right join typearme on typearme.idTypeArme = arme.idTypeArme where estDistance = 0 group by typearme.idTypeArme having count(idArme)<2;
 





# ----------------------------- #
            - PDF 3 -
# ----------------------------- #






1- #   -  Les requêtes imbriquées -   #

** Récupérer les armes ayant un nombre de dégâts supérieurs à la moyenne du nombre de dégâts de toutes les armes **
select nom , degat from arme  group by idArme having degat > (select avg(degat) from arme);
 
** Récupérer les personnages ayant un « level » inférieur à la moyenne **
select * from personnage  group by idPersonnage having level < (select avg(level) from personnage);
 
** Récupérer les personnages ayant un « level » supérieur à la moyenne des archers **
select * from personnage  group by idPersonnage having level > (select avg(level) from personnage join classe on personnage.idClasse = classe.idClasse where classe.nom = 'Archer');
 
 




2- #   -  Des requêtes imbriquées plus complexes -   #

**  Pour les armes à distances, récupérer le nombre maximum d’occurrence du type d’arme **
select count(typearme.estDistance) as `Nb d'arme à distance` from typearme inner join arme on typearme.idTypeArme = arme.idTypeArme inner join personnage on arme.idArme = personnage.idArmeUtilise where typearme.estDistance=1;
 